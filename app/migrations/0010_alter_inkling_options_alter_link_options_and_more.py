# Generated by Django 4.2.5 on 2023-10-08 17:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import martor.models
import pgvector.django


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('app', '0009_linktype_reverse_name'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='inkling',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='link',
            options={'ordering': ['link_type']},
        ),
        migrations.AlterModelOptions(
            name='linktype',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='memo',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='tag',
            options={'ordering': ['name']},
        ),
        migrations.AlterUniqueTogether(
            name='link',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='inkling',
            name='memo',
        ),
        migrations.AddField(
            model_name='inkling',
            name='title',
            field=models.CharField(default='', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='link',
            name='source_content_type',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='source_links', to='contenttypes.contenttype'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='link',
            name='source_object_id',
            field=models.PositiveIntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='link',
            name='target_content_type',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='target_links', to='contenttypes.contenttype'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='link',
            name='target_object_id',
            field=models.PositiveIntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='link',
            unique_together={('source_content_type', 'source_object_id', 'target_content_type', 'target_object_id', 'link_type')},
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('embedding', pgvector.django.VectorField(dimensions=768, null=True)),
                ('title', models.CharField(max_length=255)),
                ('content', martor.models.MartorField()),
                ('source_url', models.URLField(blank=True, max_length=2000, null=True)),
                ('source_name', models.CharField(blank=True, max_length=255, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('authors', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tags', models.ManyToManyField(blank=True, to='app.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='link',
            name='source_inkling',
        ),
        migrations.RemoveField(
            model_name='link',
            name='target_inkling',
        ),
    ]
